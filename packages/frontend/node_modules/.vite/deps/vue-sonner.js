import "./chunk-NNWWZQ5S.js";
import {
  Fragment,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createTextVNode,
  createVNode,
  defineComponent,
  normalizeClass,
  normalizeStyle,
  onMounted,
  onUnmounted,
  openBlock,
  ref,
  renderList,
  resolveDynamicComponent,
  toDisplayString,
  unref,
  useAttrs,
  watchEffect
} from "./chunk-Y2WVZVEM.js";
import "./chunk-2LSFTFF7.js";

// ../../node_modules/vue-sonner/lib/vue-sonner.js
import "D:/share/kimjunmyong/proj-sail-experience-holiday/node_modules/vue-sonner/lib/assets/index.a4db810a.css";
var pe = Object.defineProperty;
var he = (t, e, s) => e in t ? pe(t, e, { enumerable: true, configurable: true, writable: true, value: s }) : t[e] = s;
var b = (t, e, s) => (he(t, typeof e != "symbol" ? e + "" : e, s), s);
var H = 0;
var xe = class {
  constructor() {
    b(this, "subscribers");
    b(this, "toasts");
    b(this, "subscribe", (e) => (this.subscribers.push(e), () => {
      const s = this.subscribers.indexOf(e);
      this.subscribers.splice(s, 1);
    }));
    b(this, "publish", (e) => {
      this.subscribers.forEach((s) => s(e)), this.toasts = [...this.toasts, e];
    });
    b(this, "dismiss", (e) => (e || this.toasts.forEach((s) => {
      this.subscribers.forEach(
        (a) => a({ id: s.id, dismiss: true })
      );
    }), this.subscribers.forEach((s) => s({ id: e, dismiss: true })), e));
    b(this, "message", (e, s) => {
      const a = (s == null ? void 0 : s.id) || H++;
      return this.publish({ ...s, id: a, title: e }), a;
    });
    b(this, "error", (e, s) => {
      const a = (s == null ? void 0 : s.id) || H++;
      return this.publish({ ...s, id: a, type: "error", title: e }), a;
    });
    b(this, "success", (e, s) => {
      const a = (s == null ? void 0 : s.id) || H++;
      return this.publish({ ...s, id: a, type: "success", title: e }), a;
    });
    b(this, "promise", (e, s) => {
      const a = (s == null ? void 0 : s.id) || H++;
      return this.publish({ ...s, promise: e, id: a }), a;
    });
    b(this, "custom", (e, s) => {
      const a = (s == null ? void 0 : s.id) || H++;
      this.publish({ ...s, id: a, title: e });
    });
    this.subscribers = [], this.toasts = [];
  }
};
var $ = new xe();
var Te = (t, e) => {
  const s = (e == null ? void 0 : e.id) || H++;
  return $.publish({
    title: t,
    ...e,
    id: s
  }), s;
};
var we = Te;
var rt = Object.assign(we, {
  success: $.success,
  error: $.error,
  custom: $.custom,
  message: $.message,
  promise: $.promise,
  dismiss: $.dismiss
});
var ke = ["data-visible"];
var Ce = { className: "sonner-spinner" };
var Be = defineComponent({
  __name: "Loader",
  props: {
    visible: Boolean
  },
  setup(t) {
    const e = Array(12).fill(0);
    return (s, a) => (openBlock(), createElementBlock("div", {
      className: "sonner-loading-wrapper",
      "data-visible": t.visible
    }, [
      createBaseVNode("div", Ce, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(e), (N) => (openBlock(), createElementBlock("div", {
          key: `spinner-bar-${N}`,
          className: "sonner-loading-bar"
        }))), 128))
      ])
    ], 8, ke));
  }
});
var A = (t, e) => {
  const s = t.__vccOpts || t;
  for (const [a, N] of e)
    s[a] = N;
  return s;
};
var $e = A(Be, [["__file", "/Users/xiaoyunwei/Documents/GitHub/private/vue-sonner/packages/assets/Loader.vue"]]);
var Ne = {};
var De = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
};
var Ie = createBaseVNode("path", {
  "fill-rule": "evenodd",
  d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
  "clip-rule": "evenodd"
}, null, -1);
var Ee = [
  Ie
];
function Pe(t, e) {
  return openBlock(), createElementBlock("svg", De, Ee);
}
var Se = A(Ne, [["render", Pe], ["__file", "/Users/xiaoyunwei/Documents/GitHub/private/vue-sonner/packages/assets/SuccessIcon.vue"]]);
var qe = {};
var Oe = {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 20 20",
  fill: "currentColor",
  height: "20",
  width: "20"
};
var _e = createBaseVNode("path", {
  "fill-rule": "evenodd",
  d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
  "clip-rule": "evenodd"
}, null, -1);
var He = [
  _e
];
function Re(t, e) {
  return openBlock(), createElementBlock("svg", Oe, He);
}
var Ae = A(qe, [["render", Re], ["__file", "/Users/xiaoyunwei/Documents/GitHub/private/vue-sonner/packages/assets/ErrorIcon.vue"]]);
var Me = {};
var Ue = {
  xmlns: "http://www.w3.org/2000/svg",
  width: "12",
  height: "12",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stoke-width": "1.5",
  "stroke-linecap": "round",
  "stroke-linejoin": "round"
};
var Fe = createBaseVNode("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}, null, -1);
var Le = createBaseVNode("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
}, null, -1);
var ze = [
  Fe,
  Le
];
function Ge(t, e) {
  return openBlock(), createElementBlock("svg", Ue, ze);
}
var Ve = A(Me, [["render", Ge], ["__file", "/Users/xiaoyunwei/Documents/GitHub/private/vue-sonner/packages/assets/CloseIcon.vue"]]);
var je = ["aria-live", "data-styled", "data-mounted", "data-promise", "data-removed", "data-visible", "data-y-position", "data-x-position", "data-index", "data-front", "data-swiping", "data-type", "data-invert", "data-swipe-out", "data-expanded"];
var Ke = ["data-disabled"];
var We = {
  key: 1,
  "data-icon": ""
};
var Ye = { "data-content": "" };
var Je = { "data-title": "" };
var Qe = defineComponent({
  __name: "Toast",
  props: {
    toast: {
      type: Object,
      required: true
    },
    toasts: {
      type: Array,
      required: true
    },
    index: {
      type: Number,
      required: true
    },
    expanded: {
      type: Boolean,
      required: true
    },
    invert: {
      type: Boolean,
      required: true
    },
    heights: {
      type: Array,
      required: true
    },
    setHeights: {
      type: Function,
      required: true
    },
    removeToast: {
      type: Function,
      required: true
    },
    position: {
      type: String,
      required: true
    },
    visibleToasts: {
      type: Number,
      required: true
    },
    expandByDefault: {
      type: Boolean,
      required: true
    },
    closeButton: {
      type: Boolean,
      required: true
    },
    interacting: {
      type: Boolean,
      required: true
    },
    duration: {
      type: Number,
      required: false
    },
    descriptionClass: {
      type: String,
      required: false
    }
  },
  setup(t) {
    const e = t, s = 4e3, a = 14, N = 20, K = 200, m = (o) => Boolean(o.promise), D = ref(false), g = ref(false), B = ref(false), S = ref(false), v = ref(null), q = ref(0), G = ref(0), O = ref(null), d = ref(null), l = computed(() => e.index === 0), h = computed(() => e.index + 1 <= e.visibleToasts), x = computed(() => e.toast.type), _ = e.toast.className || "", I = e.toast.descriptionClassName || "", E = e.toast.style || {}, M = computed(
      () => e.heights.findIndex((o) => o.toastId === e.toast.id) || 0
    ), re = computed(
      () => e.toast.duration || e.duration || s
    ), W = ref(0), U = ref(0), Y = ref(re.value), te = ref(0), V = ref(null), J = computed(() => e.position.split("-")), le = computed(() => e.heights.reduce((o, i, n) => n >= M.value ? o : o + i.height, 0)), ue = computed(() => e.toast.invert || e.invert), Q = computed(() => v.value === "loading"), se = computed(
      () => {
        var o;
        return (o = v.value) != null ? o : e.toast.type || null;
      }
    ), X = computed(() => !m(e.toast) && typeof e.toast.title == "object"), ce = computed(() => {
      if (!m(e.toast))
        return null;
      switch (v.value) {
        case "loading":
          return e.toast.loading;
        case "success":
          return typeof e.toast.success == "function" ? O.value : e.toast.success;
        case "error":
          return typeof e.toast.error == "function" ? O.value : e.toast.error;
        default:
          return null;
      }
    });
    onMounted(() => D.value = true), watchEffect(() => {
      U.value = M.value * a + le.value;
    }), watchEffect(() => {
      var o, i;
      if (e.toast && m(e.toast)) {
        const n = e.toast;
        v.value = "loading";
        const T = (y) => {
          y.then((k) => {
            n.success && typeof n.success == "function" && (O.value = n.success(k)), v.value = "success";
          }).catch((k) => {
            n.error && typeof n.error == "function" && (O.value = n.error(k)), v.value = "error";
          });
        };
        e.toast.promise instanceof Promise ? T(e.toast.promise) : typeof e.toast.promise == "function" && T((i = (o = e.toast) == null ? void 0 : o.promise) == null ? void 0 : i.call(o));
      }
    });
    function de() {
      var o, i;
      Q.value || (P(), (i = (o = e.toast).onDismiss) == null || i.call(o, e.toast));
    }
    function P() {
      g.value = true, q.value = U.value, e.setHeights(
        e.heights.filter((o) => o.toastId !== e.toast.id)
      ), setTimeout(() => {
        e.removeToast(e.toast);
      }, K);
    }
    const ve = (o) => {
      Q || (q.value = U.value, o.target.setPointerCapture(o.pointerId), o.target.tagName !== "BUTTON" && (B.value = true, V.value = o.clientY));
    }, fe = (o) => {
      var n, T, y, k;
      if (S.value)
        return;
      const i = Number(
        ((n = d.value) == null ? void 0 : n.style.getPropertyValue("--swipe-amount").replace("px", "")) || 0
      );
      if (Math.abs(i) >= N) {
        q.value = U.value, (y = (T = e.toast).onDismiss) == null || y.call(T, e.toast), P(), S.value = true;
        return;
      }
      (k = d.value) == null || k.style.setProperty("--swipe-amount", "0px"), V.value = null, B.value = true;
    }, me = (o) => {
      var T, y;
      if (!V.value)
        return;
      const i = o.clientY - V.value;
      if (!(J.value[0] === "top" ? i < 0 : i > 0)) {
        (T = d.value) == null || T.style.setProperty("--swipe-amount", "0px");
        return;
      }
      (y = d.value) == null || y.style.setProperty("--swipe-amount", `${i}px`);
    };
    return watchEffect((o) => {
      if (e.toast.promise && v.value === "loading" || e.toast.duration === 1 / 0)
        return;
      let i;
      const n = () => {
        if (te.value < W.value) {
          const y = (/* @__PURE__ */ new Date()).getTime() - W.value;
          Y.value = Y.value - y;
        }
        te.value = (/* @__PURE__ */ new Date()).getTime();
      }, T = () => {
        W.value = (/* @__PURE__ */ new Date()).getTime(), i = setTimeout(() => {
          var y, k;
          (k = (y = e.toast).onAutoClose) == null || k.call(y, e.toast), P();
        }, Y.value);
      };
      e.expanded || e.interacting ? n() : T(), o(() => {
        clearTimeout(i);
      });
    }), onMounted(() => {
      if (d.value) {
        const o = d.value.getBoundingClientRect().height;
        G.value = o, e.setHeights([{ toastId: e.toast.id, height: o }, ...e.heights]);
      }
    }), onUnmounted(() => {
      d.value && e.setHeights(
        e.heights.filter((o) => o.toastId !== e.toast.id)
      );
    }), watchEffect(() => {
      e.toast.delete && P();
    }), (o, i) => (openBlock(), createElementBlock("li", {
      "aria-live": t.toast.important ? "assertive" : "polite",
      "aria-atomic": "",
      role: "status",
      tabindex: "0",
      ref_key: "toastRef",
      ref: d,
      "data-sonner-toast": "",
      class: normalizeClass(unref(_)),
      "data-styled": !unref(X),
      "data-mounted": D.value,
      "data-promise": Boolean(t.toast.promise),
      "data-removed": g.value,
      "data-visible": unref(h),
      "data-y-position": unref(J)[0],
      "data-x-position": unref(J)[1],
      "data-index": e.index,
      "data-front": unref(l),
      "data-swiping": B.value,
      "data-type": v.value !== "loading" && v.value ? v.value : unref(x),
      "data-invert": unref(ue),
      "data-swipe-out": S.value,
      "data-expanded": Boolean(e.expanded || e.expandByDefault && D.value),
      style: normalizeStyle({
        "--index": e.index,
        "--toasts-before": e.index,
        "--z-index": t.toasts.length - e.index,
        "--offset": `${g.value ? q.value : U.value}px`,
        "--initial-height": e.expandByDefault ? "auto" : `${G.value}px`,
        ...unref(E)
      }),
      onPointerdown: ve,
      onPointerup: fe,
      onPointermove: me
    }, [
      e.closeButton && !unref(X) ? (openBlock(), createElementBlock("button", {
        key: 0,
        "aria-label": "Close toast",
        "data-disabled": unref(Q),
        "data-close-button": "",
        onClick: de
      }, [
        createVNode(Ve)
      ], 8, Ke)) : createCommentVNode("v-if", true),
      unref(x) || t.toast.icon || t.toast.promise ? (openBlock(), createElementBlock("div", We, [
        typeof t.toast.promise == "function" ? (openBlock(), createBlock($e, {
          key: 0,
          visible: v.value === "loading"
        }, null, 8, ["visible"])) : createCommentVNode("v-if", true),
        unref(se) === "success" ? (openBlock(), createBlock(Se, { key: 1 })) : createCommentVNode("v-if", true),
        unref(se) === "error" ? (openBlock(), createBlock(Ae, { key: 2 })) : createCommentVNode("v-if", true)
      ])) : createCommentVNode("v-if", true),
      createBaseVNode("div", Ye, [
        createBaseVNode("div", Je, [
          typeof t.toast.title == "string" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
            createTextVNode(toDisplayString(t.toast.title), 1)
          ], 64)) : t.toast.title === void 0 || t.toast.title === null ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
            createTextVNode(toDisplayString(unref(ce)), 1)
          ], 64)) : unref(X) ? (openBlock(), createBlock(resolveDynamicComponent(t.toast.title), {
            key: 2,
            onCloseToast: i[0] || (i[0] = () => {
              var n;
              P(), (n = t.toast.cancel) != null && n.onClick && t.toast.cancel.onClick();
            })
          }, null, 32)) : createCommentVNode("v-if", true)
        ]),
        t.toast.description ? (openBlock(), createElementBlock("div", {
          key: 0,
          "data-description": "",
          class: normalizeClass(t.descriptionClass + unref(I))
        }, toDisplayString(t.toast.description), 3)) : createCommentVNode("v-if", true)
      ]),
      t.toast.cancel ? (openBlock(), createElementBlock("button", {
        key: 2,
        "data-button": "",
        "data-cancel": "",
        onClick: i[1] || (i[1] = () => {
          var n;
          P(), (n = t.toast.cancel) != null && n.onClick && t.toast.cancel.onClick();
        })
      }, toDisplayString(t.toast.cancel.label), 1)) : createCommentVNode("v-if", true),
      t.toast.action ? (openBlock(), createElementBlock("button", {
        key: 3,
        "data-button": "",
        onClick: i[2] || (i[2] = () => {
          var n;
          P(), (n = t.toast.action) == null || n.onClick();
        })
      }, toDisplayString(t.toast.action.label), 1)) : createCommentVNode("v-if", true)
    ], 46, je));
  }
});
var Xe = A(Qe, [["__file", "/Users/xiaoyunwei/Documents/GitHub/private/vue-sonner/packages/Toast.vue"]]);
var Ze = ["aria-label"];
var et = ["data-theme", "data-rich-colors", "data-y-position", "data-x-position"];
var tt = defineComponent({
  inheritAttrs: false
});
var st = defineComponent({
  ...tt,
  __name: "Toaster",
  props: {
    invert: Boolean,
    theme: {
      type: String,
      required: false,
      default: "light"
    },
    position: {
      type: String,
      required: false,
      default: "bottom-right"
    },
    hotkey: {
      type: Array,
      required: false,
      default: ["altKey", "KeyT"]
    },
    richColors: Boolean,
    expand: Boolean,
    duration: Number,
    visibleToasts: {
      type: Number,
      required: false,
      default: () => 3
    },
    closeButton: Boolean,
    toastOptions: {
      type: Object,
      required: false
    },
    offset: [String, Number]
  },
  setup(t) {
    const e = t, s = "32px", a = 356, N = 14, K = useAttrs(), m = ref([]), D = ref([]), g = ref(false), B = ref(false), S = computed(() => e.position.split("-")), v = ref(null), q = e.hotkey.join("+").replace(/Key/g, "").replace(/Digit/g, "");
    function G(d) {
      D.value = d;
    }
    function O(d) {
      m.value = m.value.filter(({ id: l }) => l !== d.id);
    }
    return onMounted(() => {
      const d = $.subscribe((l) => {
        if (l.dismiss) {
          m.value = m.value.map(
            (h) => h.id === l.id ? { ...h, delete: true } : h
          );
          return;
        }
        m.value = [l, ...m.value];
      });
      onUnmounted(() => {
        d();
      });
    }), watchEffect(() => {
      m.value.length <= 1 && (g.value = false);
    }), watchEffect((d) => {
      function l(h) {
        var _, I;
        e.hotkey.every(
          (E) => h[E] || h.code === E
        ) && (g.value = true, (_ = v.value) == null || _.focus()), h.code === "Escape" && (document.activeElement === v.value || ((I = v.value) == null ? void 0 : I.contains(document.activeElement))) && (g.value = false);
      }
      document.addEventListener("keydown", l), d(() => {
        document.removeEventListener("keydown", l);
      });
    }), (d, l) => {
      var h;
      return openBlock(), createElementBlock(Fragment, null, [
        createCommentVNode(" Remove item from normal navigation flow, only available via hotkey "),
        createBaseVNode("section", {
          "aria-label": `Notifications ${unref(q)}`,
          tabIndex: -1
        }, [
          createBaseVNode("ol", {
            ref_key: "listRef",
            ref: v,
            tabIndex: -1,
            "data-sonner-toaster": "",
            "data-theme": t.theme,
            "data-rich-colors": t.richColors,
            "data-y-position": unref(S)[0],
            "data-x-position": unref(S)[1],
            style: normalizeStyle(
              {
                "--front-toast-height": `${(h = D.value[0]) == null ? void 0 : h.height}px`,
                "--offset": typeof t.offset == "number" ? `${t.offset}px` : t.offset || s,
                "--width": `${a}px`,
                "--gap": `${N}px`,
                ...unref(K).style
              }
            ),
            onMouseenter: l[0] || (l[0] = (x) => g.value = true),
            onMousemove: l[1] || (l[1] = (x) => g.value = true),
            onMouseleave: l[2] || (l[2] = () => {
              B.value || (g.value = false);
            }),
            onPointerdown: l[3] || (l[3] = (x) => B.value = false),
            onPointerup: l[4] || (l[4] = (x) => B.value = false)
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(m.value, (x, _) => {
              var I, E, M;
              return openBlock(), createBlock(Xe, {
                key: x.id,
                index: _,
                toast: x,
                duration: t.duration,
                className: (I = t.toastOptions) == null ? void 0 : I.className,
                descriptionClassName: (E = t.toastOptions) == null ? void 0 : E.descriptionClassName,
                invert: t.invert,
                visibleToasts: t.visibleToasts,
                closeButton: t.closeButton,
                interacting: B.value,
                position: t.position,
                style: normalizeStyle((M = t.toastOptions) == null ? void 0 : M.style),
                removeToast: O,
                toasts: m.value,
                heights: D.value,
                setHeights: G,
                expandByDefault: t.expand,
                expanded: g.value
              }, null, 8, ["index", "toast", "duration", "className", "descriptionClassName", "invert", "visibleToasts", "closeButton", "interacting", "position", "style", "toasts", "heights", "expandByDefault", "expanded"]);
            }), 128))
          ], 44, et)
        ], 8, Ze)
      ], 2112);
    };
  }
});
var ot = A(st, [["__file", "/Users/xiaoyunwei/Documents/GitHub/private/vue-sonner/packages/Toaster.vue"]]);
var lt = {
  install(t) {
    t.component("Toaster", ot);
  }
};
export {
  ot as Toaster,
  lt as default,
  rt as toast
};
//# sourceMappingURL=vue-sonner.js.map
