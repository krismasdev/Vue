{
  "version": 3,
  "sources": ["../../../../../node_modules/@fullcalendar/core/index.js"],
  "sourcesContent": ["import { m as mergeProps, g as guid, i as isArraysEqual, T as Theme, a as mapHash, V as ViewContextType, C as ContentContainer, b as buildViewClassNames, c as greatestDurationDenominator, d as createDuration, B as BASE_OPTION_DEFAULTS, e as arrayToHash, f as filterHash, h as buildEventSourceRefiners, p as parseEventSource, j as formatWithOrdinals, u as unpromisify, k as buildRangeApiWithTimeZone, l as identity, r as requestJson, s as subtractDurations, n as intersectRanges, o as startOfDay, q as addDays, t as hashValuesToArray, v as buildEventApis, D as DelayedRunner, w as createFormatter, x as diffWholeDays, y as memoize, z as memoizeObjArg, A as isPropsEqual, E as Emitter, F as getInitialDate, G as rangeContainsMarker, H as createEmptyEventStore, I as reduceCurrentDate, J as reduceEventStore, K as rezoneEventStoreDates, L as mergeRawOptions, M as BASE_OPTION_REFINERS, N as CALENDAR_LISTENER_REFINERS, O as CALENDAR_OPTION_REFINERS, P as COMPLEX_OPTION_COMPARATORS, Q as VIEW_OPTION_REFINERS, R as DateEnv, S as DateProfileGenerator, U as createEventUi, W as parseBusinessHours, X as BaseComponent, Y as setRef, Z as Interaction, _ as getElSeg, $ as elementClosest, a0 as EventImpl, a1 as listenBySelector, a2 as listenToHoverBySelector, a3 as PureComponent, a4 as buildViewContext, a5 as getUniqueDomId, a6 as parseInteractionSettings, a7 as interactionSettingsStore, a8 as getNow, a9 as CalendarImpl, aa as flushSync, ab as CalendarRoot, ac as RenderId, ad as ensureElHasStyles, ae as applyStyleProp, af as sliceEventStore } from './internal-common.js';\nexport { ag as JsonRequestError } from './internal-common.js';\nimport { createElement, createRef, Fragment, render } from 'preact';\nimport 'preact/compat';\n\nconst globalLocales = [];\n\nconst MINIMAL_RAW_EN_LOCALE = {\n    code: 'en',\n    week: {\n        dow: 0,\n        doy: 4, // 4 days need to be within the year to be considered the first week\n    },\n    direction: 'ltr',\n    buttonText: {\n        prev: 'prev',\n        next: 'next',\n        prevYear: 'prev year',\n        nextYear: 'next year',\n        year: 'year',\n        today: 'today',\n        month: 'month',\n        week: 'week',\n        day: 'day',\n        list: 'list',\n    },\n    weekText: 'W',\n    weekTextLong: 'Week',\n    closeHint: 'Close',\n    timeHint: 'Time',\n    eventHint: 'Event',\n    allDayText: 'all-day',\n    moreLinkText: 'more',\n    noEventsText: 'No events to display',\n};\nconst RAW_EN_LOCALE = Object.assign(Object.assign({}, MINIMAL_RAW_EN_LOCALE), { \n    // Includes things we don't want other locales to inherit,\n    // things that derive from other translatable strings.\n    buttonHints: {\n        prev: 'Previous $0',\n        next: 'Next $0',\n        today(buttonText, unit) {\n            return (unit === 'day')\n                ? 'Today'\n                : `This ${buttonText}`;\n        },\n    }, viewHint: '$0 view', navLinkHint: 'Go to $0', moreLinkHint(eventCnt) {\n        return `Show ${eventCnt} more event${eventCnt === 1 ? '' : 's'}`;\n    } });\nfunction organizeRawLocales(explicitRawLocales) {\n    let defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';\n    let allRawLocales = globalLocales.concat(explicitRawLocales);\n    let rawLocaleMap = {\n        en: RAW_EN_LOCALE,\n    };\n    for (let rawLocale of allRawLocales) {\n        rawLocaleMap[rawLocale.code] = rawLocale;\n    }\n    return {\n        map: rawLocaleMap,\n        defaultCode,\n    };\n}\nfunction buildLocale(inputSingular, available) {\n    if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {\n        return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);\n    }\n    return queryLocale(inputSingular, available);\n}\nfunction queryLocale(codeArg, available) {\n    let codes = [].concat(codeArg || []); // will convert to array\n    let raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;\n    return parseLocale(codeArg, codes, raw);\n}\nfunction queryRawLocale(codes, available) {\n    for (let i = 0; i < codes.length; i += 1) {\n        let parts = codes[i].toLocaleLowerCase().split('-');\n        for (let j = parts.length; j > 0; j -= 1) {\n            let simpleId = parts.slice(0, j).join('-');\n            if (available[simpleId]) {\n                return available[simpleId];\n            }\n        }\n    }\n    return null;\n}\nfunction parseLocale(codeArg, codes, raw) {\n    let merged = mergeProps([MINIMAL_RAW_EN_LOCALE, raw], ['buttonText']);\n    delete merged.code; // don't want this part of the options\n    let { week } = merged;\n    delete merged.week;\n    return {\n        codeArg,\n        codes,\n        week,\n        simpleNumberFormat: new Intl.NumberFormat(codeArg),\n        options: merged,\n    };\n}\n\n// TODO: easier way to add new hooks? need to update a million things\nfunction createPlugin(input) {\n    return {\n        id: guid(),\n        name: input.name,\n        premiumReleaseDate: input.premiumReleaseDate ? new Date(input.premiumReleaseDate) : undefined,\n        deps: input.deps || [],\n        reducers: input.reducers || [],\n        isLoadingFuncs: input.isLoadingFuncs || [],\n        contextInit: [].concat(input.contextInit || []),\n        eventRefiners: input.eventRefiners || {},\n        eventDefMemberAdders: input.eventDefMemberAdders || [],\n        eventSourceRefiners: input.eventSourceRefiners || {},\n        isDraggableTransformers: input.isDraggableTransformers || [],\n        eventDragMutationMassagers: input.eventDragMutationMassagers || [],\n        eventDefMutationAppliers: input.eventDefMutationAppliers || [],\n        dateSelectionTransformers: input.dateSelectionTransformers || [],\n        datePointTransforms: input.datePointTransforms || [],\n        dateSpanTransforms: input.dateSpanTransforms || [],\n        views: input.views || {},\n        viewPropsTransformers: input.viewPropsTransformers || [],\n        isPropsValid: input.isPropsValid || null,\n        externalDefTransforms: input.externalDefTransforms || [],\n        viewContainerAppends: input.viewContainerAppends || [],\n        eventDropTransformers: input.eventDropTransformers || [],\n        componentInteractions: input.componentInteractions || [],\n        calendarInteractions: input.calendarInteractions || [],\n        themeClasses: input.themeClasses || {},\n        eventSourceDefs: input.eventSourceDefs || [],\n        cmdFormatter: input.cmdFormatter,\n        recurringTypes: input.recurringTypes || [],\n        namedTimeZonedImpl: input.namedTimeZonedImpl,\n        initialView: input.initialView || '',\n        elementDraggingImpl: input.elementDraggingImpl,\n        optionChangeHandlers: input.optionChangeHandlers || {},\n        scrollGridImpl: input.scrollGridImpl || null,\n        listenerRefiners: input.listenerRefiners || {},\n        optionRefiners: input.optionRefiners || {},\n        propSetHandlers: input.propSetHandlers || {},\n    };\n}\nfunction buildPluginHooks(pluginDefs, globalDefs) {\n    let currentPluginIds = {};\n    let hooks = {\n        premiumReleaseDate: undefined,\n        reducers: [],\n        isLoadingFuncs: [],\n        contextInit: [],\n        eventRefiners: {},\n        eventDefMemberAdders: [],\n        eventSourceRefiners: {},\n        isDraggableTransformers: [],\n        eventDragMutationMassagers: [],\n        eventDefMutationAppliers: [],\n        dateSelectionTransformers: [],\n        datePointTransforms: [],\n        dateSpanTransforms: [],\n        views: {},\n        viewPropsTransformers: [],\n        isPropsValid: null,\n        externalDefTransforms: [],\n        viewContainerAppends: [],\n        eventDropTransformers: [],\n        componentInteractions: [],\n        calendarInteractions: [],\n        themeClasses: {},\n        eventSourceDefs: [],\n        cmdFormatter: null,\n        recurringTypes: [],\n        namedTimeZonedImpl: null,\n        initialView: '',\n        elementDraggingImpl: null,\n        optionChangeHandlers: {},\n        scrollGridImpl: null,\n        listenerRefiners: {},\n        optionRefiners: {},\n        propSetHandlers: {},\n    };\n    function addDefs(defs) {\n        for (let def of defs) {\n            const pluginName = def.name;\n            const currentId = currentPluginIds[pluginName];\n            if (currentId === undefined) {\n                currentPluginIds[pluginName] = def.id;\n                addDefs(def.deps);\n                hooks = combineHooks(hooks, def);\n            }\n            else if (currentId !== def.id) {\n                // different ID than the one already added\n                console.warn(`Duplicate plugin '${pluginName}'`);\n            }\n        }\n    }\n    if (pluginDefs) {\n        addDefs(pluginDefs);\n    }\n    addDefs(globalDefs);\n    return hooks;\n}\nfunction buildBuildPluginHooks() {\n    let currentOverrideDefs = [];\n    let currentGlobalDefs = [];\n    let currentHooks;\n    return (overrideDefs, globalDefs) => {\n        if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {\n            currentHooks = buildPluginHooks(overrideDefs, globalDefs);\n        }\n        currentOverrideDefs = overrideDefs;\n        currentGlobalDefs = globalDefs;\n        return currentHooks;\n    };\n}\nfunction combineHooks(hooks0, hooks1) {\n    return {\n        premiumReleaseDate: compareOptionalDates(hooks0.premiumReleaseDate, hooks1.premiumReleaseDate),\n        reducers: hooks0.reducers.concat(hooks1.reducers),\n        isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),\n        contextInit: hooks0.contextInit.concat(hooks1.contextInit),\n        eventRefiners: Object.assign(Object.assign({}, hooks0.eventRefiners), hooks1.eventRefiners),\n        eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),\n        eventSourceRefiners: Object.assign(Object.assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),\n        isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),\n        eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),\n        eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),\n        dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),\n        datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),\n        dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),\n        views: Object.assign(Object.assign({}, hooks0.views), hooks1.views),\n        viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),\n        isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,\n        externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),\n        viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),\n        eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),\n        calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),\n        componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),\n        themeClasses: Object.assign(Object.assign({}, hooks0.themeClasses), hooks1.themeClasses),\n        eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),\n        cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,\n        recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),\n        namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,\n        initialView: hooks0.initialView || hooks1.initialView,\n        elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,\n        optionChangeHandlers: Object.assign(Object.assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),\n        scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,\n        listenerRefiners: Object.assign(Object.assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),\n        optionRefiners: Object.assign(Object.assign({}, hooks0.optionRefiners), hooks1.optionRefiners),\n        propSetHandlers: Object.assign(Object.assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers),\n    };\n}\nfunction compareOptionalDates(date0, date1) {\n    if (date0 === undefined) {\n        return date1;\n    }\n    if (date1 === undefined) {\n        return date0;\n    }\n    return new Date(Math.max(date0.valueOf(), date1.valueOf()));\n}\n\nclass StandardTheme extends Theme {\n}\nStandardTheme.prototype.classes = {\n    root: 'fc-theme-standard',\n    tableCellShaded: 'fc-cell-shaded',\n    buttonGroup: 'fc-button-group',\n    button: 'fc-button fc-button-primary',\n    buttonActive: 'fc-button-active',\n};\nStandardTheme.prototype.baseIconClass = 'fc-icon';\nStandardTheme.prototype.iconClasses = {\n    close: 'fc-icon-x',\n    prev: 'fc-icon-chevron-left',\n    next: 'fc-icon-chevron-right',\n    prevYear: 'fc-icon-chevrons-left',\n    nextYear: 'fc-icon-chevrons-right',\n};\nStandardTheme.prototype.rtlIconClasses = {\n    prev: 'fc-icon-chevron-right',\n    next: 'fc-icon-chevron-left',\n    prevYear: 'fc-icon-chevrons-right',\n    nextYear: 'fc-icon-chevrons-left',\n};\nStandardTheme.prototype.iconOverrideOption = 'buttonIcons'; // TODO: make TS-friendly\nStandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';\nStandardTheme.prototype.iconOverridePrefix = 'fc-icon-';\n\nfunction compileViewDefs(defaultConfigs, overrideConfigs) {\n    let hash = {};\n    let viewType;\n    for (viewType in defaultConfigs) {\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n    for (viewType in overrideConfigs) {\n        ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n    return hash;\n}\nfunction ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    if (hash[viewType]) {\n        return hash[viewType];\n    }\n    let viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    if (viewDef) {\n        hash[viewType] = viewDef;\n    }\n    return viewDef;\n}\nfunction buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    let defaultConfig = defaultConfigs[viewType];\n    let overrideConfig = overrideConfigs[viewType];\n    let queryProp = (name) => ((defaultConfig && defaultConfig[name] !== null) ? defaultConfig[name] :\n        ((overrideConfig && overrideConfig[name] !== null) ? overrideConfig[name] : null));\n    let theComponent = queryProp('component');\n    let superType = queryProp('superType');\n    let superDef = null;\n    if (superType) {\n        if (superType === viewType) {\n            throw new Error('Can\\'t have a custom view type that references itself');\n        }\n        superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);\n    }\n    if (!theComponent && superDef) {\n        theComponent = superDef.component;\n    }\n    if (!theComponent) {\n        return null; // don't throw a warning, might be settings for a single-unit view\n    }\n    return {\n        type: viewType,\n        component: theComponent,\n        defaults: Object.assign(Object.assign({}, (superDef ? superDef.defaults : {})), (defaultConfig ? defaultConfig.rawOptions : {})),\n        overrides: Object.assign(Object.assign({}, (superDef ? superDef.overrides : {})), (overrideConfig ? overrideConfig.rawOptions : {})),\n    };\n}\n\nfunction parseViewConfigs(inputs) {\n    return mapHash(inputs, parseViewConfig);\n}\nfunction parseViewConfig(input) {\n    let rawOptions = typeof input === 'function' ?\n        { component: input } :\n        input;\n    let { component } = rawOptions;\n    if (rawOptions.content) {\n        component = createViewHookComponent(rawOptions);\n        // TODO: remove content/classNames/didMount/etc from options?\n    }\n    return {\n        superType: rawOptions.type,\n        component: component,\n        rawOptions, // includes type and component too :(\n    };\n}\nfunction createViewHookComponent(options) {\n    return (viewProps) => (createElement(ViewContextType.Consumer, null, (context) => (createElement(ContentContainer, { elTag: \"div\", elClasses: buildViewClassNames(context.viewSpec), renderProps: Object.assign(Object.assign({}, viewProps), { nextDayThreshold: context.options.nextDayThreshold }), generatorName: undefined, customGenerator: options.content, classNameGenerator: options.classNames, didMount: options.didMount, willUnmount: options.willUnmount }))));\n}\n\nfunction buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\n    let defaultConfigs = parseViewConfigs(defaultInputs);\n    let overrideConfigs = parseViewConfigs(optionOverrides.views);\n    let viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);\n    return mapHash(viewDefs, (viewDef) => buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults));\n}\nfunction buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {\n    let durationInput = viewDef.overrides.duration ||\n        viewDef.defaults.duration ||\n        dynamicOptionOverrides.duration ||\n        optionOverrides.duration;\n    let duration = null;\n    let durationUnit = '';\n    let singleUnit = '';\n    let singleUnitOverrides = {};\n    if (durationInput) {\n        duration = createDurationCached(durationInput);\n        if (duration) { // valid?\n            let denom = greatestDurationDenominator(duration);\n            durationUnit = denom.unit;\n            if (denom.value === 1) {\n                singleUnit = durationUnit;\n                singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};\n            }\n        }\n    }\n    let queryButtonText = (optionsSubset) => {\n        let buttonTextMap = optionsSubset.buttonText || {};\n        let buttonTextKey = viewDef.defaults.buttonTextKey;\n        if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {\n            return buttonTextMap[buttonTextKey];\n        }\n        if (buttonTextMap[viewDef.type] != null) {\n            return buttonTextMap[viewDef.type];\n        }\n        if (buttonTextMap[singleUnit] != null) {\n            return buttonTextMap[singleUnit];\n        }\n        return null;\n    };\n    let queryButtonTitle = (optionsSubset) => {\n        let buttonHints = optionsSubset.buttonHints || {};\n        let buttonKey = viewDef.defaults.buttonTextKey; // use same key as text\n        if (buttonKey != null && buttonHints[buttonKey] != null) {\n            return buttonHints[buttonKey];\n        }\n        if (buttonHints[viewDef.type] != null) {\n            return buttonHints[viewDef.type];\n        }\n        if (buttonHints[singleUnit] != null) {\n            return buttonHints[singleUnit];\n        }\n        return null;\n    };\n    return {\n        type: viewDef.type,\n        component: viewDef.component,\n        duration,\n        durationUnit,\n        singleUnit,\n        optionDefaults: viewDef.defaults,\n        optionOverrides: Object.assign(Object.assign({}, singleUnitOverrides), viewDef.overrides),\n        buttonTextOverride: queryButtonText(dynamicOptionOverrides) ||\n            queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence\n            viewDef.overrides.buttonText,\n        buttonTextDefault: queryButtonText(localeDefaults) ||\n            viewDef.defaults.buttonText ||\n            queryButtonText(BASE_OPTION_DEFAULTS) ||\n            viewDef.type,\n        // not DRY\n        buttonTitleOverride: queryButtonTitle(dynamicOptionOverrides) ||\n            queryButtonTitle(optionOverrides) ||\n            viewDef.overrides.buttonHint,\n        buttonTitleDefault: queryButtonTitle(localeDefaults) ||\n            viewDef.defaults.buttonHint ||\n            queryButtonTitle(BASE_OPTION_DEFAULTS),\n        // will eventually fall back to buttonText\n    };\n}\n// hack to get memoization working\nlet durationInputMap = {};\nfunction createDurationCached(durationInput) {\n    let json = JSON.stringify(durationInput);\n    let res = durationInputMap[json];\n    if (res === undefined) {\n        res = createDuration(durationInput);\n        durationInputMap[json] = res;\n    }\n    return res;\n}\n\nfunction reduceViewType(viewType, action) {\n    switch (action.type) {\n        case 'CHANGE_VIEW_TYPE':\n            viewType = action.viewType;\n    }\n    return viewType;\n}\n\nfunction reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {\n    switch (action.type) {\n        case 'SET_OPTION':\n            return Object.assign(Object.assign({}, dynamicOptionOverrides), { [action.optionName]: action.rawOptionValue });\n        default:\n            return dynamicOptionOverrides;\n    }\n}\n\nfunction reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {\n    let dp;\n    switch (action.type) {\n        case 'CHANGE_VIEW_TYPE':\n            return dateProfileGenerator.build(action.dateMarker || currentDate);\n        case 'CHANGE_DATE':\n            return dateProfileGenerator.build(action.dateMarker);\n        case 'PREV':\n            dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);\n            if (dp.isValid) {\n                return dp;\n            }\n            break;\n        case 'NEXT':\n            dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);\n            if (dp.isValid) {\n                return dp;\n            }\n            break;\n    }\n    return currentDateProfile;\n}\n\nfunction initEventSources(calendarOptions, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null;\n    return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);\n}\nfunction reduceEventSources(eventSources, action, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    switch (action.type) {\n        case 'ADD_EVENT_SOURCES': // already parsed\n            return addSources(eventSources, action.sources, activeRange, context);\n        case 'REMOVE_EVENT_SOURCE':\n            return removeSource(eventSources, action.sourceId);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            if (dateProfile) {\n                return fetchDirtySources(eventSources, activeRange, context);\n            }\n            return eventSources;\n        case 'FETCH_EVENT_SOURCES':\n            return fetchSourcesByIds(eventSources, action.sourceIds ? // why no type?\n                arrayToHash(action.sourceIds) :\n                excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);\n        case 'RECEIVE_EVENTS':\n        case 'RECEIVE_EVENT_ERROR':\n            return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);\n        case 'REMOVE_ALL_EVENT_SOURCES':\n            return {};\n        default:\n            return eventSources;\n    }\n}\nfunction reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {\n    let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?\n    return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);\n}\nfunction computeEventSourcesLoading(eventSources) {\n    for (let sourceId in eventSources) {\n        if (eventSources[sourceId].isFetching) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction addSources(eventSourceHash, sources, fetchRange, context) {\n    let hash = {};\n    for (let source of sources) {\n        hash[source.sourceId] = source;\n    }\n    if (fetchRange) {\n        hash = fetchDirtySources(hash, fetchRange, context);\n    }\n    return Object.assign(Object.assign({}, eventSourceHash), hash);\n}\nfunction removeSource(eventSourceHash, sourceId) {\n    return filterHash(eventSourceHash, (eventSource) => eventSource.sourceId !== sourceId);\n}\nfunction fetchDirtySources(sourceHash, fetchRange, context) {\n    return fetchSourcesByIds(sourceHash, filterHash(sourceHash, (eventSource) => isSourceDirty(eventSource, fetchRange, context)), fetchRange, false, context);\n}\nfunction isSourceDirty(eventSource, fetchRange, context) {\n    if (!doesSourceNeedRange(eventSource, context)) {\n        return !eventSource.latestFetchId;\n    }\n    return !context.options.lazyFetching ||\n        !eventSource.fetchRange ||\n        eventSource.isFetching || // always cancel outdated in-progress fetches\n        fetchRange.start < eventSource.fetchRange.start ||\n        fetchRange.end > eventSource.fetchRange.end;\n}\nfunction fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {\n    let nextSources = {};\n    for (let sourceId in prevSources) {\n        let source = prevSources[sourceId];\n        if (sourceIdHash[sourceId]) {\n            nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);\n        }\n        else {\n            nextSources[sourceId] = source;\n        }\n    }\n    return nextSources;\n}\nfunction fetchSource(eventSource, fetchRange, isRefetch, context) {\n    let { options, calendarApi } = context;\n    let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];\n    let fetchId = guid();\n    sourceDef.fetch({\n        eventSource,\n        range: fetchRange,\n        isRefetch,\n        context,\n    }, (res) => {\n        let { rawEvents } = res;\n        if (options.eventSourceSuccess) {\n            rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        if (eventSource.success) {\n            rawEvents = eventSource.success.call(calendarApi, rawEvents, res.response) || rawEvents;\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENTS',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            rawEvents,\n        });\n    }, (error) => {\n        let errorHandled = false;\n        if (options.eventSourceFailure) {\n            options.eventSourceFailure.call(calendarApi, error);\n            errorHandled = true;\n        }\n        if (eventSource.failure) {\n            eventSource.failure(error);\n            errorHandled = true;\n        }\n        if (!errorHandled) {\n            console.warn(error.message, error);\n        }\n        context.dispatch({\n            type: 'RECEIVE_EVENT_ERROR',\n            sourceId: eventSource.sourceId,\n            fetchId,\n            fetchRange,\n            error,\n        });\n    });\n    return Object.assign(Object.assign({}, eventSource), { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {\n    let eventSource = sourceHash[sourceId];\n    if (eventSource && // not already removed\n        fetchId === eventSource.latestFetchId) {\n        return Object.assign(Object.assign({}, sourceHash), { [sourceId]: Object.assign(Object.assign({}, eventSource), { isFetching: false, fetchRange }) });\n    }\n    return sourceHash;\n}\nfunction excludeStaticSources(eventSources, context) {\n    return filterHash(eventSources, (eventSource) => doesSourceNeedRange(eventSource, context));\n}\nfunction parseInitialSources(rawOptions, context) {\n    let refiners = buildEventSourceRefiners(context);\n    let rawSources = [].concat(rawOptions.eventSources || []);\n    let sources = []; // parsed\n    if (rawOptions.initialEvents) {\n        rawSources.unshift(rawOptions.initialEvents);\n    }\n    if (rawOptions.events) {\n        rawSources.unshift(rawOptions.events);\n    }\n    for (let rawSource of rawSources) {\n        let source = parseEventSource(rawSource, context, refiners);\n        if (source) {\n            sources.push(source);\n        }\n    }\n    return sources;\n}\nfunction doesSourceNeedRange(eventSource, context) {\n    let defs = context.pluginHooks.eventSourceDefs;\n    return !defs[eventSource.sourceDefId].ignoreRange;\n}\n\nfunction reduceDateSelection(currentSelection, action) {\n    switch (action.type) {\n        case 'UNSELECT_DATES':\n            return null;\n        case 'SELECT_DATES':\n            return action.selection;\n        default:\n            return currentSelection;\n    }\n}\n\nfunction reduceSelectedEvent(currentInstanceId, action) {\n    switch (action.type) {\n        case 'UNSELECT_EVENT':\n            return '';\n        case 'SELECT_EVENT':\n            return action.eventInstanceId;\n        default:\n            return currentInstanceId;\n    }\n}\n\nfunction reduceEventDrag(currentDrag, action) {\n    let newDrag;\n    switch (action.type) {\n        case 'UNSET_EVENT_DRAG':\n            return null;\n        case 'SET_EVENT_DRAG':\n            newDrag = action.state;\n            return {\n                affectedEvents: newDrag.affectedEvents,\n                mutatedEvents: newDrag.mutatedEvents,\n                isEvent: newDrag.isEvent,\n            };\n        default:\n            return currentDrag;\n    }\n}\n\nfunction reduceEventResize(currentResize, action) {\n    let newResize;\n    switch (action.type) {\n        case 'UNSET_EVENT_RESIZE':\n            return null;\n        case 'SET_EVENT_RESIZE':\n            newResize = action.state;\n            return {\n                affectedEvents: newResize.affectedEvents,\n                mutatedEvents: newResize.mutatedEvents,\n                isEvent: newResize.isEvent,\n            };\n        default:\n            return currentResize;\n    }\n}\n\nfunction parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\n    let header = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\n    let footer = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;\n    return { header, footer };\n}\nfunction parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {\n    let sectionWidgets = {};\n    let viewsWithButtons = [];\n    let hasTitle = false;\n    for (let sectionName in sectionStrHash) {\n        let sectionStr = sectionStrHash[sectionName];\n        let sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi);\n        sectionWidgets[sectionName] = sectionRes.widgets;\n        viewsWithButtons.push(...sectionRes.viewsWithButtons);\n        hasTitle = hasTitle || sectionRes.hasTitle;\n    }\n    return { sectionWidgets, viewsWithButtons, hasTitle };\n}\n/*\nBAD: querying icons and text here. should be done at render time\n*/\nfunction parseSection(sectionStr, calendarOptions, // defaults+overrides, then refined\ncalendarOptionOverrides, // overrides only!, unrefined :(\ntheme, viewSpecs, calendarApi) {\n    let isRtl = calendarOptions.direction === 'rtl';\n    let calendarCustomButtons = calendarOptions.customButtons || {};\n    let calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};\n    let calendarButtonText = calendarOptions.buttonText || {};\n    let calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {};\n    let calendarButtonHints = calendarOptions.buttonHints || {};\n    let sectionSubstrs = sectionStr ? sectionStr.split(' ') : [];\n    let viewsWithButtons = [];\n    let hasTitle = false;\n    let widgets = sectionSubstrs.map((buttonGroupStr) => (buttonGroupStr.split(',').map((buttonName) => {\n        if (buttonName === 'title') {\n            hasTitle = true;\n            return { buttonName };\n        }\n        let customButtonProps;\n        let viewSpec;\n        let buttonClick;\n        let buttonIcon; // only one of these will be set\n        let buttonText; // \"\n        let buttonHint;\n        // ^ for the title=\"\" attribute, for accessibility\n        if ((customButtonProps = calendarCustomButtons[buttonName])) {\n            buttonClick = (ev) => {\n                if (customButtonProps.click) {\n                    customButtonProps.click.call(ev.target, ev, ev.target); // TODO: use Calendar this context?\n                }\n            };\n            (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = customButtonProps.text);\n            buttonHint = customButtonProps.hint || customButtonProps.text;\n        }\n        else if ((viewSpec = viewSpecs[buttonName])) {\n            viewsWithButtons.push(buttonName);\n            buttonClick = () => {\n                calendarApi.changeView(buttonName);\n            };\n            (buttonText = viewSpec.buttonTextOverride) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = viewSpec.buttonTextDefault);\n            let textFallback = viewSpec.buttonTextOverride ||\n                viewSpec.buttonTextDefault;\n            buttonHint = formatWithOrdinals(viewSpec.buttonTitleOverride ||\n                viewSpec.buttonTitleDefault ||\n                calendarOptions.viewHint, [textFallback, buttonName], // view-name = buttonName\n            textFallback);\n        }\n        else if (calendarApi[buttonName]) { // a calendarApi method\n            buttonClick = () => {\n                calendarApi[buttonName]();\n            };\n            (buttonText = calendarButtonTextOverrides[buttonName]) ||\n                (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||\n                (buttonText = calendarButtonText[buttonName]); // everything else is considered default\n            if (buttonName === 'prevYear' || buttonName === 'nextYear') {\n                let prevOrNext = buttonName === 'prevYear' ? 'prev' : 'next';\n                buttonHint = formatWithOrdinals(calendarButtonHintOverrides[prevOrNext] ||\n                    calendarButtonHints[prevOrNext], [\n                    calendarButtonText.year || 'year',\n                    'year',\n                ], calendarButtonText[buttonName]);\n            }\n            else {\n                buttonHint = (navUnit) => formatWithOrdinals(calendarButtonHintOverrides[buttonName] ||\n                    calendarButtonHints[buttonName], [\n                    calendarButtonText[navUnit] || navUnit,\n                    navUnit,\n                ], calendarButtonText[buttonName]);\n            }\n        }\n        return { buttonName, buttonClick, buttonIcon, buttonText, buttonHint };\n    })));\n    return { widgets, viewsWithButtons, hasTitle };\n}\n\n// always represents the current view. otherwise, it'd need to change value every time date changes\nclass ViewImpl {\n    constructor(type, getCurrentData, dateEnv) {\n        this.type = type;\n        this.getCurrentData = getCurrentData;\n        this.dateEnv = dateEnv;\n    }\n    get calendar() {\n        return this.getCurrentData().calendarApi;\n    }\n    get title() {\n        return this.getCurrentData().viewTitle;\n    }\n    get activeStart() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);\n    }\n    get activeEnd() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);\n    }\n    get currentStart() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);\n    }\n    get currentEnd() {\n        return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);\n    }\n    getOption(name) {\n        return this.getCurrentData().options[name]; // are the view-specific options\n    }\n}\n\nlet eventSourceDef$2 = {\n    ignoreRange: true,\n    parseMeta(refined) {\n        if (Array.isArray(refined.events)) {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback) {\n        successCallback({\n            rawEvents: arg.eventSource.meta,\n        });\n    },\n};\nconst arrayEventSourcePlugin = createPlugin({\n    name: 'array-event-source',\n    eventSourceDefs: [eventSourceDef$2],\n});\n\nlet eventSourceDef$1 = {\n    parseMeta(refined) {\n        if (typeof refined.events === 'function') {\n            return refined.events;\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { dateEnv } = arg.context;\n        const func = arg.eventSource.meta;\n        unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), (rawEvents) => successCallback({ rawEvents }), errorCallback);\n    },\n};\nconst funcEventSourcePlugin = createPlugin({\n    name: 'func-event-source',\n    eventSourceDefs: [eventSourceDef$1],\n});\n\nconst JSON_FEED_EVENT_SOURCE_REFINERS = {\n    method: String,\n    extraParams: identity,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n};\n\nlet eventSourceDef = {\n    parseMeta(refined) {\n        if (refined.url && (refined.format === 'json' || !refined.format)) {\n            return {\n                url: refined.url,\n                format: 'json',\n                method: (refined.method || 'GET').toUpperCase(),\n                extraParams: refined.extraParams,\n                startParam: refined.startParam,\n                endParam: refined.endParam,\n                timeZoneParam: refined.timeZoneParam,\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const { meta } = arg.eventSource;\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\n        requestJson(meta.method, meta.url, requestParams).then(([rawEvents, response]) => {\n            successCallback({ rawEvents, response });\n        }, errorCallback);\n    },\n};\nconst jsonFeedEventSourcePlugin = createPlugin({\n    name: 'json-event-source',\n    eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,\n    eventSourceDefs: [eventSourceDef],\n});\nfunction buildRequestParams(meta, range, context) {\n    let { dateEnv, options } = context;\n    let startParam;\n    let endParam;\n    let timeZoneParam;\n    let customRequestParams;\n    let params = {};\n    startParam = meta.startParam;\n    if (startParam == null) {\n        startParam = options.startParam;\n    }\n    endParam = meta.endParam;\n    if (endParam == null) {\n        endParam = options.endParam;\n    }\n    timeZoneParam = meta.timeZoneParam;\n    if (timeZoneParam == null) {\n        timeZoneParam = options.timeZoneParam;\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    Object.assign(params, customRequestParams);\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n    if (dateEnv.timeZone !== 'local') {\n        params[timeZoneParam] = dateEnv.timeZone;\n    }\n    return params;\n}\n\nconst SIMPLE_RECURRING_REFINERS = {\n    daysOfWeek: identity,\n    startTime: createDuration,\n    endTime: createDuration,\n    duration: createDuration,\n    startRecur: identity,\n    endRecur: identity,\n};\n\nlet recurring = {\n    parse(refined, dateEnv) {\n        if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {\n            let recurringData = {\n                daysOfWeek: refined.daysOfWeek || null,\n                startTime: refined.startTime || null,\n                endTime: refined.endTime || null,\n                startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,\n                endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,\n            };\n            let duration;\n            if (refined.duration) {\n                duration = refined.duration;\n            }\n            if (!duration && refined.startTime && refined.endTime) {\n                duration = subtractDurations(refined.endTime, refined.startTime);\n            }\n            return {\n                allDayGuess: Boolean(!refined.startTime && !refined.endTime),\n                duration,\n                typeData: recurringData, // doesn't need endTime anymore but oh well\n            };\n        }\n        return null;\n    },\n    expand(typeData, framingRange, dateEnv) {\n        let clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });\n        if (clippedFramingRange) {\n            return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);\n        }\n        return [];\n    },\n};\nconst simpleRecurringEventsPlugin = createPlugin({\n    name: 'simple-recurring-event',\n    recurringTypes: [recurring],\n    eventRefiners: SIMPLE_RECURRING_REFINERS,\n});\nfunction expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {\n    let dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;\n    let dayMarker = startOfDay(framingRange.start);\n    let endMarker = framingRange.end;\n    let instanceStarts = [];\n    while (dayMarker < endMarker) {\n        let instanceStart;\n        // if everyday, or this particular day-of-week\n        if (!dowHash || dowHash[dayMarker.getUTCDay()]) {\n            if (startTime) {\n                instanceStart = dateEnv.add(dayMarker, startTime);\n            }\n            else {\n                instanceStart = dayMarker;\n            }\n            instanceStarts.push(instanceStart);\n        }\n        dayMarker = addDays(dayMarker, 1);\n    }\n    return instanceStarts;\n}\n\nconst changeHandlerPlugin = createPlugin({\n    name: 'change-handler',\n    optionChangeHandlers: {\n        events(events, context) {\n            handleEventSources([events], context);\n        },\n        eventSources: handleEventSources,\n    },\n});\n/*\nBUG: if `event` was supplied, all previously-given `eventSources` will be wiped out\n*/\nfunction handleEventSources(inputs, context) {\n    let unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);\n    if (unfoundSources.length === 1 &&\n        inputs.length === 1 &&\n        Array.isArray(unfoundSources[0]._raw) &&\n        Array.isArray(inputs[0])) {\n        context.dispatch({\n            type: 'RESET_RAW_EVENTS',\n            sourceId: unfoundSources[0].sourceId,\n            rawEvents: inputs[0],\n        });\n        return;\n    }\n    let newInputs = [];\n    for (let input of inputs) {\n        let inputFound = false;\n        for (let i = 0; i < unfoundSources.length; i += 1) {\n            if (unfoundSources[i]._raw === input) {\n                unfoundSources.splice(i, 1); // delete\n                inputFound = true;\n                break;\n            }\n        }\n        if (!inputFound) {\n            newInputs.push(input);\n        }\n    }\n    for (let unfoundSource of unfoundSources) {\n        context.dispatch({\n            type: 'REMOVE_EVENT_SOURCE',\n            sourceId: unfoundSource.sourceId,\n        });\n    }\n    for (let newInput of newInputs) {\n        context.calendarApi.addEventSource(newInput);\n    }\n}\n\nfunction handleDateProfile(dateProfile, context) {\n    context.emitter.trigger('datesSet', Object.assign(Object.assign({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));\n}\n\nfunction handleEventStore(eventStore, context) {\n    let { emitter } = context;\n    if (emitter.hasHandlers('eventsSet')) {\n        emitter.trigger('eventsSet', buildEventApis(eventStore, context));\n    }\n}\n\n/*\nthis array is exposed on the root namespace so that UMD plugins can add to it.\nsee the rollup-bundles script.\n*/\nconst globalPlugins = [\n    arrayEventSourcePlugin,\n    funcEventSourcePlugin,\n    jsonFeedEventSourcePlugin,\n    simpleRecurringEventsPlugin,\n    changeHandlerPlugin,\n    createPlugin({\n        name: 'misc',\n        isLoadingFuncs: [\n            (state) => computeEventSourcesLoading(state.eventSources),\n        ],\n        propSetHandlers: {\n            dateProfile: handleDateProfile,\n            eventStore: handleEventStore,\n        },\n    }),\n];\n\nclass TaskRunner {\n    constructor(runTaskOption, drainedOption) {\n        this.runTaskOption = runTaskOption;\n        this.drainedOption = drainedOption;\n        this.queue = [];\n        this.delayedRunner = new DelayedRunner(this.drain.bind(this));\n    }\n    request(task, delay) {\n        this.queue.push(task);\n        this.delayedRunner.request(delay);\n    }\n    pause(scope) {\n        this.delayedRunner.pause(scope);\n    }\n    resume(scope, force) {\n        this.delayedRunner.resume(scope, force);\n    }\n    drain() {\n        let { queue } = this;\n        while (queue.length) {\n            let completedTasks = [];\n            let task;\n            while ((task = queue.shift())) {\n                this.runTask(task);\n                completedTasks.push(task);\n            }\n            this.drained(completedTasks);\n        } // keep going, in case new tasks were added in the drained handler\n    }\n    runTask(task) {\n        if (this.runTaskOption) {\n            this.runTaskOption(task);\n        }\n    }\n    drained(completedTasks) {\n        if (this.drainedOption) {\n            this.drainedOption(completedTasks);\n        }\n    }\n}\n\n// Computes what the title at the top of the calendarApi should be for this view\nfunction buildTitle(dateProfile, viewOptions, dateEnv) {\n    let range;\n    // for views that span a large unit of time, show the proper interval, ignoring stray days before and after\n    if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {\n        range = dateProfile.currentRange;\n    }\n    else { // for day units or smaller, use the actual day range\n        range = dateProfile.activeRange;\n    }\n    return dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {\n        isEndExclusive: dateProfile.isRangeAllDay,\n        defaultSeparator: viewOptions.titleRangeSeparator,\n    });\n}\n// Generates the format string that should be used to generate the title for the current date range.\n// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\nfunction buildTitleFormat(dateProfile) {\n    let { currentRangeUnit } = dateProfile;\n    if (currentRangeUnit === 'year') {\n        return { year: 'numeric' };\n    }\n    if (currentRangeUnit === 'month') {\n        return { year: 'numeric', month: 'long' }; // like \"September 2014\"\n    }\n    let days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);\n    if (days !== null && days > 1) {\n        // multi-day range. shorter, like \"Sep 9 - 10 2014\"\n        return { year: 'numeric', month: 'short', day: 'numeric' };\n    }\n    // one day. longer, like \"September 9 2014\"\n    return { year: 'numeric', month: 'long', day: 'numeric' };\n}\n\n// in future refactor, do the redux-style function(state=initial) for initial-state\n// also, whatever is happening in constructor, have it happen in action queue too\nclass CalendarDataManager {\n    constructor(props) {\n        this.computeCurrentViewData = memoize(this._computeCurrentViewData);\n        this.organizeRawLocales = memoize(organizeRawLocales);\n        this.buildLocale = memoize(buildLocale);\n        this.buildPluginHooks = buildBuildPluginHooks();\n        this.buildDateEnv = memoize(buildDateEnv$1);\n        this.buildTheme = memoize(buildTheme);\n        this.parseToolbars = memoize(parseToolbars);\n        this.buildViewSpecs = memoize(buildViewSpecs);\n        this.buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator);\n        this.buildViewApi = memoize(buildViewApi);\n        this.buildViewUiProps = memoizeObjArg(buildViewUiProps);\n        this.buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual);\n        this.buildEventUiBases = memoize(buildEventUiBases);\n        this.parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours);\n        this.buildTitle = memoize(buildTitle);\n        this.emitter = new Emitter();\n        this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));\n        this.currentCalendarOptionsInput = {};\n        this.currentCalendarOptionsRefined = {};\n        this.currentViewOptionsInput = {};\n        this.currentViewOptionsRefined = {};\n        this.currentCalendarOptionsRefiners = {};\n        this.optionsForRefining = [];\n        this.optionsForHandling = [];\n        this.getCurrentData = () => this.data;\n        this.dispatch = (action) => {\n            this.actionRunner.request(action); // protects against recursive calls to _handleAction\n        };\n        this.props = props;\n        this.actionRunner.pause();\n        let dynamicOptionOverrides = {};\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\n        let currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\n        // wire things up\n        // TODO: not DRY\n        props.calendarApi.currentDataManager = this;\n        this.emitter.setThisContext(props.calendarApi);\n        this.emitter.setOptions(currentViewData.options);\n        let currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv);\n        let dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\n        if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {\n            currentDate = dateProfile.currentRange.start;\n        }\n        let calendarContext = {\n            dateEnv: optionsData.dateEnv,\n            options: optionsData.calendarOptions,\n            pluginHooks: optionsData.pluginHooks,\n            calendarApi: props.calendarApi,\n            dispatch: this.dispatch,\n            emitter: this.emitter,\n            getCurrentData: this.getCurrentData,\n        };\n        // needs to be after setThisContext\n        for (let callback of optionsData.pluginHooks.contextInit) {\n            callback(calendarContext);\n        }\n        // NOT DRY\n        let eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);\n        let initialState = {\n            dynamicOptionOverrides,\n            currentViewType,\n            currentDate,\n            dateProfile,\n            businessHours: this.parseContextBusinessHours(calendarContext),\n            eventSources,\n            eventUiBases: {},\n            eventStore: createEmptyEventStore(),\n            renderableEventStore: createEmptyEventStore(),\n            dateSelection: null,\n            eventSelection: '',\n            eventDrag: null,\n            eventResize: null,\n            selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig,\n        };\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), initialState);\n        for (let reducer of optionsData.pluginHooks.reducers) {\n            Object.assign(initialState, reducer(null, null, contextAndState));\n        }\n        if (computeIsLoading(initialState, calendarContext)) {\n            this.emitter.trigger('loading', true); // NOT DRY\n        }\n        this.state = initialState;\n        this.updateData();\n        this.actionRunner.resume();\n    }\n    resetOptions(optionOverrides, changedOptionNames) {\n        let { props } = this;\n        if (changedOptionNames === undefined) {\n            props.optionOverrides = optionOverrides;\n        }\n        else {\n            props.optionOverrides = Object.assign(Object.assign({}, (props.optionOverrides || {})), optionOverrides);\n            this.optionsForRefining.push(...changedOptionNames);\n        }\n        if (changedOptionNames === undefined || changedOptionNames.length) {\n            this.actionRunner.request({\n                type: 'NOTHING',\n            });\n        }\n    }\n    _handleAction(action) {\n        let { props, state, emitter } = this;\n        let dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);\n        let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);\n        let currentViewType = reduceViewType(state.currentViewType, action);\n        let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);\n        // wire things up\n        // TODO: not DRY\n        props.calendarApi.currentDataManager = this;\n        emitter.setThisContext(props.calendarApi);\n        emitter.setOptions(currentViewData.options);\n        let calendarContext = {\n            dateEnv: optionsData.dateEnv,\n            options: optionsData.calendarOptions,\n            pluginHooks: optionsData.pluginHooks,\n            calendarApi: props.calendarApi,\n            dispatch: this.dispatch,\n            emitter,\n            getCurrentData: this.getCurrentData,\n        };\n        let { currentDate, dateProfile } = state;\n        if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) { // hack\n            dateProfile = currentViewData.dateProfileGenerator.build(currentDate);\n        }\n        currentDate = reduceCurrentDate(currentDate, action);\n        dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);\n        if (action.type === 'PREV' || // TODO: move this logic into DateProfileGenerator\n            action.type === 'NEXT' || // \"\n            !rangeContainsMarker(dateProfile.currentRange, currentDate)) {\n            currentDate = dateProfile.currentRange.start;\n        }\n        let eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);\n        let eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext);\n        let isEventsLoading = computeEventSourcesLoading(eventSources); // BAD. also called in this func in computeIsLoading\n        let renderableEventStore = (isEventsLoading && !currentViewData.options.progressiveEventRendering) ?\n            (state.renderableEventStore || eventStore) : // try from previous state\n            eventStore;\n        let { eventUiSingleBase, selectionConfig } = this.buildViewUiProps(calendarContext); // will memoize obj\n        let eventUiBySource = this.buildEventUiBySource(eventSources);\n        let eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);\n        let newState = {\n            dynamicOptionOverrides,\n            currentViewType,\n            currentDate,\n            dateProfile,\n            eventSources,\n            eventStore,\n            renderableEventStore,\n            selectionConfig,\n            eventUiBases,\n            businessHours: this.parseContextBusinessHours(calendarContext),\n            dateSelection: reduceDateSelection(state.dateSelection, action),\n            eventSelection: reduceSelectedEvent(state.eventSelection, action),\n            eventDrag: reduceEventDrag(state.eventDrag, action),\n            eventResize: reduceEventResize(state.eventResize, action),\n        };\n        let contextAndState = Object.assign(Object.assign({}, calendarContext), newState);\n        for (let reducer of optionsData.pluginHooks.reducers) {\n            Object.assign(newState, reducer(state, action, contextAndState)); // give the OLD state, for old value\n        }\n        let wasLoading = computeIsLoading(state, calendarContext);\n        let isLoading = computeIsLoading(newState, calendarContext);\n        // TODO: use propSetHandlers in plugin system\n        if (!wasLoading && isLoading) {\n            emitter.trigger('loading', true);\n        }\n        else if (wasLoading && !isLoading) {\n            emitter.trigger('loading', false);\n        }\n        this.state = newState;\n        if (props.onAction) {\n            props.onAction(action);\n        }\n    }\n    updateData() {\n        let { props, state } = this;\n        let oldData = this.data;\n        let optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);\n        let currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);\n        let data = this.data = Object.assign(Object.assign(Object.assign({ viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv), calendarApi: props.calendarApi, dispatch: this.dispatch, emitter: this.emitter, getCurrentData: this.getCurrentData }, optionsData), currentViewData), state);\n        let changeHandlers = optionsData.pluginHooks.optionChangeHandlers;\n        let oldCalendarOptions = oldData && oldData.calendarOptions;\n        let newCalendarOptions = optionsData.calendarOptions;\n        if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {\n            if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {\n                // hack\n                state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);\n                state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv);\n                state.renderableEventStore = data.renderableEventStore = rezoneEventStoreDates(data.renderableEventStore, oldData.dateEnv, data.dateEnv);\n            }\n            for (let optionName in changeHandlers) {\n                if (this.optionsForHandling.indexOf(optionName) !== -1 ||\n                    oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {\n                    changeHandlers[optionName](newCalendarOptions[optionName], data);\n                }\n            }\n        }\n        this.optionsForHandling = [];\n        if (props.onData) {\n            props.onData(data);\n        }\n    }\n    computeOptionsData(optionOverrides, dynamicOptionOverrides, calendarApi) {\n        // TODO: blacklist options that are handled by optionChangeHandlers\n        if (!this.optionsForRefining.length &&\n            optionOverrides === this.stableOptionOverrides &&\n            dynamicOptionOverrides === this.stableDynamicOptionOverrides) {\n            return this.stableCalendarOptionsData;\n        }\n        let { refinedOptions, pluginHooks, localeDefaults, availableLocaleData, extra, } = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides);\n        warnUnknownOptions(extra);\n        let dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);\n        let viewSpecs = this.buildViewSpecs(pluginHooks.views, this.stableOptionOverrides, this.stableDynamicOptionOverrides, localeDefaults);\n        let theme = this.buildTheme(refinedOptions, pluginHooks);\n        let toolbarConfig = this.parseToolbars(refinedOptions, this.stableOptionOverrides, theme, viewSpecs, calendarApi);\n        return this.stableCalendarOptionsData = {\n            calendarOptions: refinedOptions,\n            pluginHooks,\n            dateEnv,\n            viewSpecs,\n            theme,\n            toolbarConfig,\n            localeDefaults,\n            availableRawLocales: availableLocaleData.map,\n        };\n    }\n    // always called from behind a memoizer\n    processRawCalendarOptions(optionOverrides, dynamicOptionOverrides) {\n        let { locales, locale } = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let availableLocaleData = this.organizeRawLocales(locales);\n        let availableRawLocales = availableLocaleData.map;\n        let localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;\n        let pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);\n        let refiners = this.currentCalendarOptionsRefiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\n        let extra = {};\n        let raw = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            localeDefaults,\n            optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let refined = {};\n        let currentRaw = this.currentCalendarOptionsInput;\n        let currentRefined = this.currentCalendarOptionsRefined;\n        let anyChanges = false;\n        for (let optionName in raw) {\n            if (this.optionsForRefining.indexOf(optionName) === -1 && (raw[optionName] === currentRaw[optionName] || (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                (optionName in currentRaw) &&\n                COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName])))) {\n                refined[optionName] = currentRefined[optionName];\n            }\n            else if (refiners[optionName]) {\n                refined[optionName] = refiners[optionName](raw[optionName]);\n                anyChanges = true;\n            }\n            else {\n                extra[optionName] = currentRaw[optionName];\n            }\n        }\n        if (anyChanges) {\n            this.currentCalendarOptionsInput = raw;\n            this.currentCalendarOptionsRefined = refined;\n            this.stableOptionOverrides = optionOverrides;\n            this.stableDynamicOptionOverrides = dynamicOptionOverrides;\n        }\n        this.optionsForHandling.push(...this.optionsForRefining);\n        this.optionsForRefining = [];\n        return {\n            rawOptions: this.currentCalendarOptionsInput,\n            refinedOptions: this.currentCalendarOptionsRefined,\n            pluginHooks,\n            availableLocaleData,\n            localeDefaults,\n            extra,\n        };\n    }\n    _computeCurrentViewData(viewType, optionsData, optionOverrides, dynamicOptionOverrides) {\n        let viewSpec = optionsData.viewSpecs[viewType];\n        if (!viewSpec) {\n            throw new Error(`viewType \"${viewType}\" is not available. Please make sure you've loaded all neccessary plugins`);\n        }\n        let { refinedOptions, extra } = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides);\n        warnUnknownOptions(extra);\n        let dateProfileGenerator = this.buildDateProfileGenerator({\n            dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,\n            duration: viewSpec.duration,\n            durationUnit: viewSpec.durationUnit,\n            usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,\n            dateEnv: optionsData.dateEnv,\n            calendarApi: this.props.calendarApi,\n            slotMinTime: refinedOptions.slotMinTime,\n            slotMaxTime: refinedOptions.slotMaxTime,\n            showNonCurrentDates: refinedOptions.showNonCurrentDates,\n            dayCount: refinedOptions.dayCount,\n            dateAlignment: refinedOptions.dateAlignment,\n            dateIncrement: refinedOptions.dateIncrement,\n            hiddenDays: refinedOptions.hiddenDays,\n            weekends: refinedOptions.weekends,\n            nowInput: refinedOptions.now,\n            validRangeInput: refinedOptions.validRange,\n            visibleRangeInput: refinedOptions.visibleRange,\n            fixedWeekCount: refinedOptions.fixedWeekCount,\n        });\n        let viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);\n        return { viewSpec, options: refinedOptions, dateProfileGenerator, viewApi };\n    }\n    processRawViewOptions(viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {\n        let raw = mergeRawOptions([\n            BASE_OPTION_DEFAULTS,\n            viewSpec.optionDefaults,\n            localeDefaults,\n            optionOverrides,\n            viewSpec.optionOverrides,\n            dynamicOptionOverrides,\n        ]);\n        let refiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), VIEW_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);\n        let refined = {};\n        let currentRaw = this.currentViewOptionsInput;\n        let currentRefined = this.currentViewOptionsRefined;\n        let anyChanges = false;\n        let extra = {};\n        for (let optionName in raw) {\n            if (raw[optionName] === currentRaw[optionName] ||\n                (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                    COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], currentRaw[optionName]))) {\n                refined[optionName] = currentRefined[optionName];\n            }\n            else {\n                if (raw[optionName] === this.currentCalendarOptionsInput[optionName] ||\n                    (COMPLEX_OPTION_COMPARATORS[optionName] &&\n                        COMPLEX_OPTION_COMPARATORS[optionName](raw[optionName], this.currentCalendarOptionsInput[optionName]))) {\n                    if (optionName in this.currentCalendarOptionsRefined) { // might be an \"extra\" prop\n                        refined[optionName] = this.currentCalendarOptionsRefined[optionName];\n                    }\n                }\n                else if (refiners[optionName]) {\n                    refined[optionName] = refiners[optionName](raw[optionName]);\n                }\n                else {\n                    extra[optionName] = raw[optionName];\n                }\n                anyChanges = true;\n            }\n        }\n        if (anyChanges) {\n            this.currentViewOptionsInput = raw;\n            this.currentViewOptionsRefined = refined;\n        }\n        return {\n            rawOptions: this.currentViewOptionsInput,\n            refinedOptions: this.currentViewOptionsRefined,\n            extra,\n        };\n    }\n}\nfunction buildDateEnv$1(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {\n    let locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);\n    return new DateEnv({\n        calendarSystem: 'gregory',\n        timeZone,\n        namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,\n        locale,\n        weekNumberCalculation,\n        firstDay,\n        weekText,\n        cmdFormatter: pluginHooks.cmdFormatter,\n        defaultSeparator,\n    });\n}\nfunction buildTheme(options, pluginHooks) {\n    let ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;\n    return new ThemeClass(options);\n}\nfunction buildDateProfileGenerator(props) {\n    let DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator;\n    return new DateProfileGeneratorClass(props);\n}\nfunction buildViewApi(type, getCurrentData, dateEnv) {\n    return new ViewImpl(type, getCurrentData, dateEnv);\n}\nfunction buildEventUiBySource(eventSources) {\n    return mapHash(eventSources, (eventSource) => eventSource.ui);\n}\nfunction buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {\n    let eventUiBases = { '': eventUiSingleBase };\n    for (let defId in eventDefs) {\n        let def = eventDefs[defId];\n        if (def.sourceId && eventUiBySource[def.sourceId]) {\n            eventUiBases[defId] = eventUiBySource[def.sourceId];\n        }\n    }\n    return eventUiBases;\n}\nfunction buildViewUiProps(calendarContext) {\n    let { options } = calendarContext;\n    return {\n        eventUiSingleBase: createEventUi({\n            display: options.eventDisplay,\n            editable: options.editable,\n            startEditable: options.eventStartEditable,\n            durationEditable: options.eventDurationEditable,\n            constraint: options.eventConstraint,\n            overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,\n            allow: options.eventAllow,\n            backgroundColor: options.eventBackgroundColor,\n            borderColor: options.eventBorderColor,\n            textColor: options.eventTextColor,\n            color: options.eventColor,\n            // classNames: options.eventClassNames // render hook will handle this\n        }, calendarContext),\n        selectionConfig: createEventUi({\n            constraint: options.selectConstraint,\n            overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,\n            allow: options.selectAllow,\n        }, calendarContext),\n    };\n}\nfunction computeIsLoading(state, context) {\n    for (let isLoadingFunc of context.pluginHooks.isLoadingFuncs) {\n        if (isLoadingFunc(state)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction parseContextBusinessHours(calendarContext) {\n    return parseBusinessHours(calendarContext.options.businessHours, calendarContext);\n}\nfunction warnUnknownOptions(options, viewName) {\n    for (let optionName in options) {\n        console.warn(`Unknown option '${optionName}'` +\n            (viewName ? ` for view '${viewName}'` : ''));\n    }\n}\n\nclass ToolbarSection extends BaseComponent {\n    render() {\n        let children = this.props.widgetGroups.map((widgetGroup) => this.renderWidgetGroup(widgetGroup));\n        return createElement('div', { className: 'fc-toolbar-chunk' }, ...children);\n    }\n    renderWidgetGroup(widgetGroup) {\n        let { props } = this;\n        let { theme } = this.context;\n        let children = [];\n        let isOnlyButtons = true;\n        for (let widget of widgetGroup) {\n            let { buttonName, buttonClick, buttonText, buttonIcon, buttonHint } = widget;\n            if (buttonName === 'title') {\n                isOnlyButtons = false;\n                children.push(createElement(\"h2\", { className: \"fc-toolbar-title\", id: props.titleId }, props.title));\n            }\n            else {\n                let isPressed = buttonName === props.activeButton;\n                let isDisabled = (!props.isTodayEnabled && buttonName === 'today') ||\n                    (!props.isPrevEnabled && buttonName === 'prev') ||\n                    (!props.isNextEnabled && buttonName === 'next');\n                let buttonClasses = [`fc-${buttonName}-button`, theme.getClass('button')];\n                if (isPressed) {\n                    buttonClasses.push(theme.getClass('buttonActive'));\n                }\n                children.push(createElement(\"button\", { type: \"button\", title: typeof buttonHint === 'function' ? buttonHint(props.navUnit) : buttonHint, disabled: isDisabled, \"aria-pressed\": isPressed, className: buttonClasses.join(' '), onClick: buttonClick }, buttonText || (buttonIcon ? createElement(\"span\", { className: buttonIcon }) : '')));\n            }\n        }\n        if (children.length > 1) {\n            let groupClassName = (isOnlyButtons && theme.getClass('buttonGroup')) || '';\n            return createElement('div', { className: groupClassName }, ...children);\n        }\n        return children[0];\n    }\n}\n\nclass Toolbar extends BaseComponent {\n    render() {\n        let { model, extraClassName } = this.props;\n        let forceLtr = false;\n        let startContent;\n        let endContent;\n        let sectionWidgets = model.sectionWidgets;\n        let centerContent = sectionWidgets.center;\n        if (sectionWidgets.left) {\n            forceLtr = true;\n            startContent = sectionWidgets.left;\n        }\n        else {\n            startContent = sectionWidgets.start;\n        }\n        if (sectionWidgets.right) {\n            forceLtr = true;\n            endContent = sectionWidgets.right;\n        }\n        else {\n            endContent = sectionWidgets.end;\n        }\n        let classNames = [\n            extraClassName || '',\n            'fc-toolbar',\n            forceLtr ? 'fc-toolbar-ltr' : '',\n        ];\n        return (createElement(\"div\", { className: classNames.join(' ') },\n            this.renderSection('start', startContent || []),\n            this.renderSection('center', centerContent || []),\n            this.renderSection('end', endContent || [])));\n    }\n    renderSection(key, widgetGroups) {\n        let { props } = this;\n        return (createElement(ToolbarSection, { key: key, widgetGroups: widgetGroups, title: props.title, navUnit: props.navUnit, activeButton: props.activeButton, isTodayEnabled: props.isTodayEnabled, isPrevEnabled: props.isPrevEnabled, isNextEnabled: props.isNextEnabled, titleId: props.titleId }));\n    }\n}\n\nclass ViewHarness extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            availableWidth: null,\n        };\n        this.handleEl = (el) => {\n            this.el = el;\n            setRef(this.props.elRef, el);\n            this.updateAvailableWidth();\n        };\n        this.handleResize = () => {\n            this.updateAvailableWidth();\n        };\n    }\n    render() {\n        let { props, state } = this;\n        let { aspectRatio } = props;\n        let classNames = [\n            'fc-view-harness',\n            (aspectRatio || props.liquid || props.height)\n                ? 'fc-view-harness-active' // harness controls the height\n                : 'fc-view-harness-passive', // let the view do the height\n        ];\n        let height = '';\n        let paddingBottom = '';\n        if (aspectRatio) {\n            if (state.availableWidth !== null) {\n                height = state.availableWidth / aspectRatio;\n            }\n            else {\n                // while waiting to know availableWidth, we can't set height to *zero*\n                // because will cause lots of unnecessary scrollbars within scrollgrid.\n                // BETTER: don't start rendering ANYTHING yet until we know container width\n                // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)\n                paddingBottom = `${(1 / aspectRatio) * 100}%`;\n            }\n        }\n        else {\n            height = props.height || '';\n        }\n        return (createElement(\"div\", { \"aria-labelledby\": props.labeledById, ref: this.handleEl, className: classNames.join(' '), style: { height, paddingBottom } }, props.children));\n    }\n    componentDidMount() {\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    updateAvailableWidth() {\n        if (this.el && // needed. but why?\n            this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth\n        ) {\n            this.setState({ availableWidth: this.el.offsetWidth });\n        }\n    }\n}\n\n/*\nDetects when the user clicks on an event within a DateComponent\n*/\nclass EventClicking extends Interaction {\n    constructor(settings) {\n        super(settings);\n        this.handleSegClick = (ev, segEl) => {\n            let { component } = this;\n            let { context } = component;\n            let seg = getElSeg(segEl);\n            if (seg && // might be the <div> surrounding the more link\n                component.isValidSegDownEl(ev.target)) {\n                // our way to simulate a link click for elements that can't be <a> tags\n                // grab before trigger fired in case trigger trashes DOM thru rerendering\n                let hasUrlContainer = elementClosest(ev.target, '.fc-event-forced-url');\n                let url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';\n                context.emitter.trigger('eventClick', {\n                    el: segEl,\n                    event: new EventImpl(component.context, seg.eventRange.def, seg.eventRange.instance),\n                    jsEvent: ev,\n                    view: context.viewApi,\n                });\n                if (url && !ev.defaultPrevented) {\n                    window.location.href = url;\n                }\n            }\n        };\n        this.destroy = listenBySelector(settings.el, 'click', '.fc-event', // on both fg and bg events\n        this.handleSegClick);\n    }\n}\n\n/*\nTriggers events and adds/removes core classNames when the user's pointer\nenters/leaves event-elements of a component.\n*/\nclass EventHovering extends Interaction {\n    constructor(settings) {\n        super(settings);\n        // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it\n        this.handleEventElRemove = (el) => {\n            if (el === this.currentSegEl) {\n                this.handleSegLeave(null, this.currentSegEl);\n            }\n        };\n        this.handleSegEnter = (ev, segEl) => {\n            if (getElSeg(segEl)) { // TODO: better way to make sure not hovering over more+ link or its wrapper\n                this.currentSegEl = segEl;\n                this.triggerEvent('eventMouseEnter', ev, segEl);\n            }\n        };\n        this.handleSegLeave = (ev, segEl) => {\n            if (this.currentSegEl) {\n                this.currentSegEl = null;\n                this.triggerEvent('eventMouseLeave', ev, segEl);\n            }\n        };\n        this.removeHoverListeners = listenToHoverBySelector(settings.el, '.fc-event', // on both fg and bg events\n        this.handleSegEnter, this.handleSegLeave);\n    }\n    destroy() {\n        this.removeHoverListeners();\n    }\n    triggerEvent(publicEvName, ev, segEl) {\n        let { component } = this;\n        let { context } = component;\n        let seg = getElSeg(segEl);\n        if (!ev || component.isValidSegDownEl(ev.target)) {\n            context.emitter.trigger(publicEvName, {\n                el: segEl,\n                event: new EventImpl(context, seg.eventRange.def, seg.eventRange.instance),\n                jsEvent: ev,\n                view: context.viewApi,\n            });\n        }\n    }\n}\n\nclass CalendarContent extends PureComponent {\n    constructor() {\n        super(...arguments);\n        this.buildViewContext = memoize(buildViewContext);\n        this.buildViewPropTransformers = memoize(buildViewPropTransformers);\n        this.buildToolbarProps = memoize(buildToolbarProps);\n        this.headerRef = createRef();\n        this.footerRef = createRef();\n        this.interactionsStore = {};\n        // eslint-disable-next-line\n        this.state = {\n            viewLabelId: getUniqueDomId(),\n        };\n        // Component Registration\n        // -----------------------------------------------------------------------------------------------------------------\n        this.registerInteractiveComponent = (component, settingsInput) => {\n            let settings = parseInteractionSettings(component, settingsInput);\n            let DEFAULT_INTERACTIONS = [\n                EventClicking,\n                EventHovering,\n            ];\n            let interactionClasses = DEFAULT_INTERACTIONS.concat(this.props.pluginHooks.componentInteractions);\n            let interactions = interactionClasses.map((TheInteractionClass) => new TheInteractionClass(settings));\n            this.interactionsStore[component.uid] = interactions;\n            interactionSettingsStore[component.uid] = settings;\n        };\n        this.unregisterInteractiveComponent = (component) => {\n            let listeners = this.interactionsStore[component.uid];\n            if (listeners) {\n                for (let listener of listeners) {\n                    listener.destroy();\n                }\n                delete this.interactionsStore[component.uid];\n            }\n            delete interactionSettingsStore[component.uid];\n        };\n        // Resizing\n        // -----------------------------------------------------------------------------------------------------------------\n        this.resizeRunner = new DelayedRunner(() => {\n            this.props.emitter.trigger('_resize', true); // should window resizes be considered \"forced\" ?\n            this.props.emitter.trigger('windowResize', { view: this.props.viewApi });\n        });\n        this.handleWindowResize = (ev) => {\n            let { options } = this.props;\n            if (options.handleWindowResize &&\n                ev.target === window // avoid jqui events\n            ) {\n                this.resizeRunner.request(options.windowResizeDelay);\n            }\n        };\n    }\n    /*\n    renders INSIDE of an outer div\n    */\n    render() {\n        let { props } = this;\n        let { toolbarConfig, options } = props;\n        let toolbarProps = this.buildToolbarProps(props.viewSpec, props.dateProfile, props.dateProfileGenerator, props.currentDate, getNow(props.options.now, props.dateEnv), // TODO: use NowTimer????\n        props.viewTitle);\n        let viewVGrow = false;\n        let viewHeight = '';\n        let viewAspectRatio;\n        if (props.isHeightAuto || props.forPrint) {\n            viewHeight = '';\n        }\n        else if (options.height != null) {\n            viewVGrow = true;\n        }\n        else if (options.contentHeight != null) {\n            viewHeight = options.contentHeight;\n        }\n        else {\n            viewAspectRatio = Math.max(options.aspectRatio, 0.5); // prevent from getting too tall\n        }\n        let viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);\n        let viewLabelId = (toolbarConfig.header && toolbarConfig.header.hasTitle)\n            ? this.state.viewLabelId\n            : '';\n        return (createElement(ViewContextType.Provider, { value: viewContext },\n            toolbarConfig.header && (createElement(Toolbar, Object.assign({ ref: this.headerRef, extraClassName: \"fc-header-toolbar\", model: toolbarConfig.header, titleId: viewLabelId }, toolbarProps))),\n            createElement(ViewHarness, { liquid: viewVGrow, height: viewHeight, aspectRatio: viewAspectRatio, labeledById: viewLabelId },\n                this.renderView(props),\n                this.buildAppendContent()),\n            toolbarConfig.footer && (createElement(Toolbar, Object.assign({ ref: this.footerRef, extraClassName: \"fc-footer-toolbar\", model: toolbarConfig.footer, titleId: \"\" }, toolbarProps)))));\n    }\n    componentDidMount() {\n        let { props } = this;\n        this.calendarInteractions = props.pluginHooks.calendarInteractions\n            .map((CalendarInteractionClass) => new CalendarInteractionClass(props));\n        window.addEventListener('resize', this.handleWindowResize);\n        let { propSetHandlers } = props.pluginHooks;\n        for (let propName in propSetHandlers) {\n            propSetHandlers[propName](props[propName], props);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        let { props } = this;\n        let { propSetHandlers } = props.pluginHooks;\n        for (let propName in propSetHandlers) {\n            if (props[propName] !== prevProps[propName]) {\n                propSetHandlers[propName](props[propName], props);\n            }\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize);\n        this.resizeRunner.clear();\n        for (let interaction of this.calendarInteractions) {\n            interaction.destroy();\n        }\n        this.props.emitter.trigger('_unmount');\n    }\n    buildAppendContent() {\n        let { props } = this;\n        let children = props.pluginHooks.viewContainerAppends.map((buildAppendContent) => buildAppendContent(props));\n        return createElement(Fragment, {}, ...children);\n    }\n    renderView(props) {\n        let { pluginHooks } = props;\n        let { viewSpec } = props;\n        let viewProps = {\n            dateProfile: props.dateProfile,\n            businessHours: props.businessHours,\n            eventStore: props.renderableEventStore,\n            eventUiBases: props.eventUiBases,\n            dateSelection: props.dateSelection,\n            eventSelection: props.eventSelection,\n            eventDrag: props.eventDrag,\n            eventResize: props.eventResize,\n            isHeightAuto: props.isHeightAuto,\n            forPrint: props.forPrint,\n        };\n        let transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);\n        for (let transformer of transformers) {\n            Object.assign(viewProps, transformer.transform(viewProps, props));\n        }\n        let ViewComponent = viewSpec.component;\n        return (createElement(ViewComponent, Object.assign({}, viewProps)));\n    }\n}\nfunction buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {\n    // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid\n    let todayInfo = dateProfileGenerator.build(now, undefined, false); // TODO: need `undefined` or else INFINITE LOOP for some reason\n    let prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);\n    let nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);\n    return {\n        title,\n        activeButton: viewSpec.type,\n        navUnit: viewSpec.singleUnit,\n        isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),\n        isPrevEnabled: prevInfo.isValid,\n        isNextEnabled: nextInfo.isValid,\n    };\n}\n// Plugin\n// -----------------------------------------------------------------------------------------------------------------\nfunction buildViewPropTransformers(theClasses) {\n    return theClasses.map((TheClass) => new TheClass());\n}\n\nclass Calendar extends CalendarImpl {\n    constructor(el, optionOverrides = {}) {\n        super();\n        this.isRendering = false;\n        this.isRendered = false;\n        this.currentClassNames = [];\n        this.customContentRenderId = 0;\n        this.handleAction = (action) => {\n            // actions we know we want to render immediately\n            switch (action.type) {\n                case 'SET_EVENT_DRAG':\n                case 'SET_EVENT_RESIZE':\n                    this.renderRunner.tryDrain();\n            }\n        };\n        this.handleData = (data) => {\n            this.currentData = data;\n            this.renderRunner.request(data.calendarOptions.rerenderDelay);\n        };\n        this.handleRenderRequest = () => {\n            if (this.isRendering) {\n                this.isRendered = true;\n                let { currentData } = this;\n                flushSync(() => {\n                    render(createElement(CalendarRoot, { options: currentData.calendarOptions, theme: currentData.theme, emitter: currentData.emitter }, (classNames, height, isHeightAuto, forPrint) => {\n                        this.setClassNames(classNames);\n                        this.setHeight(height);\n                        return (createElement(RenderId.Provider, { value: this.customContentRenderId },\n                            createElement(CalendarContent, Object.assign({ isHeightAuto: isHeightAuto, forPrint: forPrint }, currentData))));\n                    }), this.el);\n                });\n            }\n            else if (this.isRendered) {\n                this.isRendered = false;\n                render(null, this.el);\n                this.setClassNames([]);\n                this.setHeight('');\n            }\n        };\n        ensureElHasStyles(el);\n        this.el = el;\n        this.renderRunner = new DelayedRunner(this.handleRenderRequest);\n        new CalendarDataManager({\n            optionOverrides,\n            calendarApi: this,\n            onAction: this.handleAction,\n            onData: this.handleData,\n        });\n    }\n    render() {\n        let wasRendering = this.isRendering;\n        if (!wasRendering) {\n            this.isRendering = true;\n        }\n        else {\n            this.customContentRenderId += 1;\n        }\n        this.renderRunner.request();\n        if (wasRendering) {\n            this.updateSize();\n        }\n    }\n    destroy() {\n        if (this.isRendering) {\n            this.isRendering = false;\n            this.renderRunner.request();\n        }\n    }\n    updateSize() {\n        flushSync(() => {\n            super.updateSize();\n        });\n    }\n    batchRendering(func) {\n        this.renderRunner.pause('batchRendering');\n        func();\n        this.renderRunner.resume('batchRendering');\n    }\n    pauseRendering() {\n        this.renderRunner.pause('pauseRendering');\n    }\n    resumeRendering() {\n        this.renderRunner.resume('pauseRendering', true);\n    }\n    resetOptions(optionOverrides, changedOptionNames) {\n        this.currentDataManager.resetOptions(optionOverrides, changedOptionNames);\n    }\n    setClassNames(classNames) {\n        if (!isArraysEqual(classNames, this.currentClassNames)) {\n            let { classList } = this.el;\n            for (let className of this.currentClassNames) {\n                classList.remove(className);\n            }\n            for (let className of classNames) {\n                classList.add(className);\n            }\n            this.currentClassNames = classNames;\n        }\n    }\n    setHeight(height) {\n        applyStyleProp(this.el, 'height', height);\n    }\n}\n\nfunction formatDate(dateInput, options = {}) {\n    let dateEnv = buildDateEnv(options);\n    let formatter = createFormatter(options);\n    let dateMeta = dateEnv.createMarkerMeta(dateInput);\n    if (!dateMeta) { // TODO: warning?\n        return '';\n    }\n    return dateEnv.format(dateMeta.marker, formatter, {\n        forcedTzo: dateMeta.forcedTzo,\n    });\n}\nfunction formatRange(startInput, endInput, options) {\n    let dateEnv = buildDateEnv(typeof options === 'object' && options ? options : {}); // pass in if non-null object\n    let formatter = createFormatter(options);\n    let startMeta = dateEnv.createMarkerMeta(startInput);\n    let endMeta = dateEnv.createMarkerMeta(endInput);\n    if (!startMeta || !endMeta) { // TODO: warning?\n        return '';\n    }\n    return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {\n        forcedStartTzo: startMeta.forcedTzo,\n        forcedEndTzo: endMeta.forcedTzo,\n        isEndExclusive: options.isEndExclusive,\n        defaultSeparator: BASE_OPTION_DEFAULTS.defaultRangeSeparator,\n    });\n}\n// TODO: more DRY and optimized\nfunction buildDateEnv(settings) {\n    let locale = buildLocale(settings.locale || 'en', organizeRawLocales([]).map); // TODO: don't hardcode 'en' everywhere\n    return new DateEnv(Object.assign(Object.assign({ timeZone: BASE_OPTION_DEFAULTS.timeZone, calendarSystem: 'gregory' }, settings), { locale }));\n}\n\n// HELPERS\n/*\nif nextDayThreshold is specified, slicing is done in an all-day fashion.\nyou can get nextDayThreshold from context.nextDayThreshold\n*/\nfunction sliceEvents(props, allDay) {\n    return sliceEventStore(props.eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? props.nextDayThreshold : null).fg;\n}\n\nconst version = '6.1.7';\n\nexport { Calendar, createPlugin, formatDate, formatRange, globalLocales, globalPlugins, sliceEvents, version };\n"],
  "mappings": "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",
  "names": []
}
